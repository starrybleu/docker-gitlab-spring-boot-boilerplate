image: docker:latest

before_script:
  - export

stages:
  - build
  - package
  - deploy

gradle-build:
  image: openjdk:8
  stage: build
  script:
    - ./gradlew build
  artifacts:
    paths:
      - build/libs/*.jar

docker-build:
  stage: package
  script:
  - docker build -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID .
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  
deploy-production:
  stage: deploy
  script:
    - ID=$(docker ps -a --filter="name=prod-$CI_PROJECT_NAME" -q) && [[ -n $ID ]] && docker stop $ID && docker rm $ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker run --detach --name prod-$CI_PROJECT_NAME --restart always --publish 8080 -e VIRTUAL_HOST=example.com,www.example.com -e LETSENCRYPT_HOST=example.com,www.example.com -e LETSENCRYPT_EMAIL=starrybleu@gmail.com,starrybleu@gmail.com $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
    - docker network connect nginx-net prod-$CI_PROJECT_NAME
    - docker stop letsencrypt && docker start letsencrypt
    - docker stop nginx-proxy && docker start nginx-proxy
  environment:
    name: production
  when: manual
  only:
    - master